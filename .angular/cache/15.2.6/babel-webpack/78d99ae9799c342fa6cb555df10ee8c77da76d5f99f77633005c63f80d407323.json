{"ast":null,"code":"import { User } from '../jobservice.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../jobservice.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(myService, router) {\n    this.myService = myService;\n    this.router = router;\n    this.user = new User();\n    this.invalidLogin = false;\n    this.error = \"\";\n  }\n  ngOnInit() {}\n  register(registerForm) {\n    this.myService.register(registerForm.username, registerForm.password, registerForm.role).subscribe(data => {\n      alert(\"Registered Successfully  : \" + data.username + \" As \" + data.role);\n      this.router.navigate(['login']);\n      this.invalidLogin = false;\n    }, error => {\n      this.invalidLogin = true;\n      this.error = error.message;\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.JobserviceService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"register\"]],\n  inputs: {\n    error: \"error\"\n  },\n  decls: 39,\n  vars: 0,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"utf-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1\"], [\"rel\", \"stylesheet\", \"href\", \"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"], [1, \"text-light\", \"form-inline\", 2, \"background-color\", \"#181A1B\"], [\"align\", \"center\", 1, \"container\"], [1, \"text-primary\"], [1, \"was-validated\", 3, \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [\"type\", \"text\", \"align\", \"center\", \"id\", \"uname\", \"placeholder\", \" username\", \"ngModel\", \"\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\"], [1, \"valid-feedback\"], [1, \"invalid-feedback\"], [\"type\", \"password\", \"id\", \"pwd\", \"placeholder\", \" password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\"], [\"name\", \"role\", \"ngModel\", \"\", 1, \"form-control\"], [\"value\", \"\", \"selected\", \"\"], [\"value\", \"admin\"], [\"value\", \"rec\", \"selected\", \"\"], [\"value\", \"free\", \"selected\", \"\"], [1, \"form-check-label\"], [\"type\", \"checkbox\", \"name\", \"remember\", \"required\", \"\", 1, \"form-check-input\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \"Bootstrap Example\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"meta\", 1)(5, \"meta\", 2)(6, \"link\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"body\", 4)(8, \"div\", 5)(9, \"h2\", 6)(10, \"b\");\n      i0.ɵɵtext(11, \"REGISTER\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"form\", 7, 8);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_13_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(14);\n        return i0.ɵɵresetView(ctx.register(_r0.value));\n      });\n      i0.ɵɵelement(15, \"input\", 9);\n      i0.ɵɵelementStart(16, \"div\", 10);\n      i0.ɵɵtext(17, \"Valid.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 11);\n      i0.ɵɵtext(19, \"Please fill out this field.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 12);\n      i0.ɵɵelementStart(21, \"div\", 10);\n      i0.ɵɵtext(22, \"Valid.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 11);\n      i0.ɵɵtext(24, \"Please fill out this field.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"select\", 13)(26, \"option\", 14);\n      i0.ɵɵtext(27, \"Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"option\", 15);\n      i0.ɵɵtext(29, \"Admin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"option\", 16);\n      i0.ɵɵtext(31, \"Recruiter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"option\", 17);\n      i0.ɵɵtext(33, \"Freelancer\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"label\", 18);\n      i0.ɵɵelement(35, \"input\", 19);\n      i0.ɵɵtext(36, \" Remeber Me \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"button\", 20);\n      i0.ɵɵtext(38, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAA2BA,IAAI,QAAQ,uBAAuB;;;;;AAQ9D,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,SAA2B,EAASC,MAAa;IAAjD,cAAS,GAATD,SAAS;IAA2B,WAAM,GAANC,MAAM;IAC9D,SAAI,GAAM,IAAIJ,IAAI,EAAE;IACpB,iBAAY,GAAG,KAAK;IAEX,UAAK,GAAU,EAAE;EAJ+C;EAKzEK,QAAQ,IACR;EACAC,QAAQ,CAACC,YAAgB;IACpB,IAAI,CAACJ,SAAS,CAACG,QAAQ,CAACC,YAAY,CAACC,QAAQ,EAAED,YAAY,CAACE,QAAQ,EAACF,YAAY,CAACG,IAAI,CAAC,CAACC,SAAS,CAChGC,IAAI,IAAG;MACLC,KAAK,CAAC,6BAA6B,GAACD,IAAI,CAACJ,QAAQ,GAAC,MAAM,GAACI,IAAI,CAACF,IAAI,CAAC;MACnE,IAAI,CAACN,MAAM,CAACU,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,IAAI,CAACC,YAAY,GAAG,KAAK;IAC3B,CAAC,EACDC,KAAK,IAAG;MACN,IAAI,CAACD,YAAY,GAAG,IAAI;MACxB,IAAI,CAACC,KAAK,GAAGA,KAAK,CAACC,OAAO;IAE5B,CAAC,CACF;EAEL;;;mBAvBWhB,iBAAiB;AAAA;;QAAjBA,iBAAiB;EAAAiB;EAAAC;IAAAH;EAAA;EAAAI;EAAAC;EAAAC;EAAAC;IAAA;;MCT9BC,+BAAgB;MAGPA,iCAAiB;MAAAA,iBAAQ;MAChCA,0BAAsB;MAMxBA,iBAAO;MAEPA,+BAAwE;MAGxCA,yBAAQ;MAAAA,iBAAI;MACxCA,sBAAI;MACJA,mCAA6F;MAA1CA;QAAAA;QAAA;QAAA,OAAYA,sCAA4B;MAAA,EAAC;MAGxFA,4BACW;MACXA,gCAA4B;MAAAA,uBAAM;MAAAA,iBAAM;MACxCA,gCAA8B;MAAAA,4CAA2B;MAAAA,iBAAM;MAI/DA,6BACW;MACXA,gCAA4B;MAAAA,uBAAM;MAAAA,iBAAM;MACxCA,gCAA8B;MAAAA,4CAA2B;MAAAA,iBAAM;MAI/DA,mCAAiD;MACrBA,qBAAI;MAAAA,iBAAS;MACvCA,mCAAsB;MAAAA,sBAAK;MAAAA,iBAAS;MACpCA,mCAA6B;MAAAA,0BAAS;MAAAA,iBAAS;MAC/CA,mCAA8B;MAAAA,2BAAU;MAAAA,iBAAS;MAInDA,kCAAgC;MAC9BA,6BAAyE;MAACA,6BAC5E;MAAAA,iBAAQ;MAEVA,mCAA8C;MAAAA,uBAAM;MAAAA,iBAAS","names":["User","RegisterComponent","constructor","myService","router","ngOnInit","register","registerForm","username","password","role","subscribe","data","alert","navigate","invalidLogin","error","message","selectors","inputs","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\job4\\src\\app\\register\\register.component.ts","C:\\Users\\Administrator\\job4\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JobserviceService,User } from '../jobservice.service';\n\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private myService:JobserviceService,private router:Router) { }\n  user:User=new User();\n  invalidLogin = false\n  \n  @Input() error: string =\"\";\n  ngOnInit() {\n  }\n  register(registerForm:any) {\n      (this.myService.register(registerForm.username, registerForm.password,registerForm.role).subscribe(\n        data => {\n          alert(\"Registered Successfully  : \"+data.username+\" As \"+data.role)\n          this.router.navigate(['login'])\n          this.invalidLogin = false\n        },\n        error => {\n          this.invalidLogin = true\n          this.error = error.message;\n  \n        }\n      )\n      );\n  }\n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <title>Bootstrap Example</title>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n</head>\n\n<body style=\"background-color: #181A1B;\" class=\"text-light form-inline\">\n\n  <div class=\"container\" align=\"center\">\n    <h2 class=\"text-primary\"><b>REGISTER</b></h2>\n    <br>\n    <form #registerForm=\"ngForm\" class=\"was-validated\" (ngSubmit)=\"register(registerForm.value)\">\n      <!-- <div class=\"form-group \" style=\"align-items: center;\"> -->\n        <!-- <label for=\"uname\">Username:</label> -->\n        <input type=\"text\" align=\"center\" class=\"form-control\" id=\"uname\" placeholder=\" username\" ngModel name=\"username\"\n          required>\n        <div class=\"valid-feedback\">Valid.</div>\n        <div class=\"invalid-feedback\">Please fill out this field.</div>\n      <!-- </div> -->\n      <!-- <div class=\"form-group\"> -->\n        <!-- <label for=\"pwd\">Password:</label> -->\n        <input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\" password\" ngModel name=\"password\"\n          required>\n        <div class=\"valid-feedback\">Valid.</div>\n        <div class=\"invalid-feedback\">Please fill out this field.</div>\n      <!-- </div> -->\n      <!-- <div class=\"form-group\"> -->\n        <!-- <label for=\"role\">As:</label> -->\n        <select class=\"form-control\" name=\"role\" ngModel>\n          <option value=\"\" selected>Role</option>\n          <option value=\"admin\">Admin</option>\n          <option value=\"rec\" selected>Recruiter</option>\n          <option value=\"free\" selected>Freelancer</option>\n        </select>\n      <!-- </div> -->\n      <!-- <div class=\"form-group form-check\"> -->\n        <label class=\"form-check-label\">\n          <input class=\"form-check-input\" type=\"checkbox\" name=\"remember\" required> Remeber Me\n        </label>\n      <!-- </div> -->\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n  </div>\n\n</body>\n\n</html>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}