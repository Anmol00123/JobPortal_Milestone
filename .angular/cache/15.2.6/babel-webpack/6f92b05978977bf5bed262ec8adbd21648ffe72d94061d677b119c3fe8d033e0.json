{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FreelancerService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:8081/freelancer\";\n  }\n  //POST Method\n  createFreelancer(freelancer) {\n    console.log(\"Add Freelancer Method\");\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    return this.http.post(`${this.baseUrl}/add`, freelancer, {\n      responseType: 'text',\n      headers\n    });\n  }\n  //GET Method\n  findById(id) {\n    console.log(\"Get Freelancer by Id\");\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    return this.http.get(`${this.baseUrl}/get/${id}`, {\n      headers,\n      responseType: 'json'\n    });\n  }\n  updateFreelancer(freelancer) {\n    console.log(\"Update Freelancer Details\");\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    return this.http.put(`${this.baseUrl}/update`, {\n      headers,\n      responseType: 'json'\n    });\n  }\n}\nFreelancerService.ɵfac = function FreelancerService_Factory(t) {\n  return new (t || FreelancerService)(i0.ɵɵinject(i1.HttpClient));\n};\nFreelancerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FreelancerService,\n  factory: FreelancerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFzB,YAAO,GAAG,kCAAkC;EAI3C;EAEA;EACOC,gBAAgB,CAACC,UAAsB;IAC5CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpC,MAAMC,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,iCAAiC,CAAC;IACxF,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACC,OAAO,MAAM,EAAEN,UAAU,EAAE;MAAGO,YAAY,EAAE,MAAgB;MAACJ;IAAO,CAAE,CAAC;EACvG;EAEA;EACOK,QAAQ,CAACC,EAAU;IACxBR,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,MAAMC,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,iCAAiC,CAAC;IACxF,OAAO,IAAI,CAACN,IAAI,CAACY,GAAG,CAAC,GAAG,IAAI,CAACJ,OAAO,QAAQG,EAAE,EAAE,EAAE;MAAEN,OAAO;MAAEI,YAAY,EAAE;IAAM,CAAE,CAAC;EACtF;EACOI,gBAAgB,CAACX,UAAsB;IAC5CC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxC,MAAMC,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,iCAAiC,CAAC;IACxF,OAAO,IAAI,CAACN,IAAI,CAACc,GAAG,CAAC,GAAG,IAAI,CAACN,OAAO,SAAS,EAAE;MAAEH,OAAO;MAAEI,YAAY,EAAE;IAAM,CAAE,CAAC;EACnF;;;mBAzBWX,iBAAiB;AAAA;;SAAjBA,iBAAiB;EAAAiB,SAAjBjB,iBAAiB;EAAAkB,YAFhB;AAAM","names":["HttpHeaders","FreelancerService","constructor","http","createFreelancer","freelancer","console","log","headers","set","post","baseUrl","responseType","findById","id","get","updateFreelancer","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\job4\\src\\app\\freelancerservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Freelancer } from './jobservice.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FreelancerService {\n\n baseUrl = \"http://localhost:8081/freelancer\";\n  \n  constructor(private http: HttpClient) {\n    \n  }\n\n  //POST Method\n  public createFreelancer(freelancer: Freelancer) {\n    console.log(\"Add Freelancer Method\");\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    return this.http.post(`${this.baseUrl}/add`, freelancer, {  responseType: 'text' as 'json',headers });\n  }\n\n  //GET Method\n  public findById(id: number): Observable<any> {\n    console.log(\"Get Freelancer by Id\");\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    return this.http.get(`${this.baseUrl}/get/${id}`, { headers, responseType: 'json' });\n  }\n  public updateFreelancer(freelancer: Freelancer) {\n    console.log(\"Update Freelancer Details\");\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    return this.http.put(`${this.baseUrl}/update`, { headers, responseType: 'json' });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}