{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class BasicAuthHtppInterceptorService {\n  constructor() {}\n  intercept(req, next) {\n    if (sessionStorage.getItem('username') && sessionStorage.getItem('token')) {\n      console.log(\"Interceptor\", sessionStorage.getItem('token'));\n      req = req.clone({\n        setHeaders: {\n          Authorization: sessionStorage.getItem('token')\n        },\n        responseType: 'text'\n      });\n    }\n    return next.handle(req);\n  }\n}\nBasicAuthHtppInterceptorService.ɵfac = function BasicAuthHtppInterceptorService_Factory(t) {\n  return new (t || BasicAuthHtppInterceptorService)();\n};\nBasicAuthHtppInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BasicAuthHtppInterceptorService,\n  factory: BasicAuthHtppInterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,+BAA+B;EAE1CC,eAAgB;EAEhBC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAEhD,IAAIC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,IAAID,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MACzEC,OAAO,CAACC,GAAG,CAAC,aAAa,EAACH,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;MAC1DH,GAAG,GAAGA,GAAG,CAACM,KAAK,CAAC;QACdC,UAAU,EAAE;UACVC,aAAa,EAAEN,cAAc,CAACC,OAAO,CAAC,OAAO;SAC9C;QACAM,YAAY,EAAE;OAChB,CAAC;;IAGJ,OAAOR,IAAI,CAACS,MAAM,CAACV,GAAG,CAAC;EAEzB;;;mBAlBWH,+BAA+B;AAAA;;SAA/BA,+BAA+B;EAAAc,SAA/Bd,+BAA+B;EAAAe,YAF9B;AAAM","names":["BasicAuthHtppInterceptorService","constructor","intercept","req","next","sessionStorage","getItem","console","log","clone","setHeaders","Authorization","responseType","handle","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\job4\\src\\app\\BasicAuthHttpInterceptorService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicAuthHtppInterceptorService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    if (sessionStorage.getItem('username') && sessionStorage.getItem('token')) {\n      console.log(\"Interceptor\",sessionStorage.getItem('token'));\n      req = req.clone({\n        setHeaders: {\n          Authorization: sessionStorage.getItem('token')\n        },\n         responseType: 'text'\n      })\n    }\n\n    return next.handle(req);\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}