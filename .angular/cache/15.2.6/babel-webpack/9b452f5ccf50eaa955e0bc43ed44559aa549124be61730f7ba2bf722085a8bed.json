{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookmarkedFreelancerService {\n  constructor(http) {\n    this.http = http;\n    this.headers_object = new HttpHeaders();\n  }\n  addBookmark(bookmarkedFreelancer) {\n    console.log(\"Bookmark in service class\");\n    console.log(bookmarkedFreelancer);\n    const headers = new HttpHeaders().set('Content_Type', 'application/json; charset=utf-8');\n    return this.http.post(\"http://localhost:8081/bookmarkfree/add\", bookmarkedFreelancer, {\n      responseType: 'text',\n      headers\n    });\n  }\n  removeBookmark(remBook) {\n    console.log(\"Removing bookmark\");\n    console.log(remBook);\n    const headers = new HttpHeaders().set('Content_Type', 'application/json; charset=utf-8');\n    return this.http.delete(\"http://localhost:8081/bookmarkfree/delete\" + remBook, {\n      responseType: 'text',\n      headers\n    });\n  }\n  findBySkill(skill) {\n    console.log(\"Finding by skill\");\n    console.log(skill);\n    const headers = new HttpHeaders().set('Content_Type', 'application/json; charset=utf-8');\n    return this.http.get(\"http://localhost:8081/bookmarkfree/get\" + skill, {\n      responseType: 'text',\n      headers\n    });\n  }\n}\nBookmarkedFreelancerService.ɵfac = function BookmarkedFreelancerService_Factory(t) {\n  return new (t || BookmarkedFreelancerService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookmarkedFreelancerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookmarkedFreelancerService,\n  factory: BookmarkedFreelancerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,2BAA2B;EACtCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAExB,mBAAc,GAAG,IAAIH,WAAW,EAAE;EAFM;EAIjCI,WAAW,CAACC,oBAA0C;IAC3DC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxCD,OAAO,CAACC,GAAG,CAACF,oBAAoB,CAAC;IACjC,MAAMG,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,iCAAiC,CAAC;IACxF,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,wCAAwC,EAAEL,oBAAoB,EAAE;MAAEM,YAAY,EAAE,MAAgB;MAAEH;IAAO,CAAE,CAAC;EACpI;EAEOI,cAAc,CAACC,OAA6B;IACjDP,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChCD,OAAO,CAACC,GAAG,CAACM,OAAO,CAAC;IACpB,MAAML,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,iCAAiC,CAAC;IACxF,OAAO,IAAI,CAACN,IAAI,CAACW,MAAM,CAAC,2CAA2C,GAAGD,OAAO,EAAE;MAAEF,YAAY,EAAE,MAAgB;MAAEH;IAAO,CAAE,CAAC;EAC7H;EAEOO,WAAW,CAACC,KAAa;IAC9BV,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BD,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;IAClB,MAAMR,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,iCAAiC,CAAC;IACxF,OAAO,IAAI,CAACN,IAAI,CAACc,GAAG,CAAC,wCAAwC,GAAGD,KAAK,EAAE;MAAEL,YAAY,EAAE,MAAgB;MAAEH;IAAO,CAAE,CAAC;EACrH;;;mBAxBWP,2BAA2B;AAAA;;SAA3BA,2BAA2B;EAAAiB,SAA3BjB,2BAA2B;EAAAkB,YAF1B;AAAM","names":["HttpHeaders","BookmarkedFreelancerService","constructor","http","addBookmark","bookmarkedFreelancer","console","log","headers","set","post","responseType","removeBookmark","remBook","delete","findBySkill","skill","get","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Administrator\\job4\\src\\app\\bookmarked-freelancer.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BookmarkedFreelancer } from './jobservice.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookmarkedFreelancerService {\n  constructor(private http: HttpClient) { }\n\n  headers_object = new HttpHeaders();\n\n  public addBookmark(bookmarkedFreelancer: BookmarkedFreelancer) {\n    console.log(\"Bookmark in service class\");\n    console.log(bookmarkedFreelancer);\n    const headers = new HttpHeaders().set('Content_Type', 'application/json; charset=utf-8');\n    return this.http.post(\"http://localhost:8081/bookmarkfree/add\", bookmarkedFreelancer, { responseType: 'text' as 'json', headers });\n  }\n\n  public removeBookmark(remBook: BookmarkedFreelancer) {\n    console.log(\"Removing bookmark\");\n    console.log(remBook);\n    const headers = new HttpHeaders().set('Content_Type', 'application/json; charset=utf-8');\n    return this.http.delete(\"http://localhost:8081/bookmarkfree/delete\" + remBook, { responseType: 'text' as 'json', headers });\n  }\n\n  public findBySkill(skill: string) {\n    console.log(\"Finding by skill\");\n    console.log(skill);\n    const headers = new HttpHeaders().set('Content_Type', 'application/json; charset=utf-8');\n    return this.http.get(\"http://localhost:8081/bookmarkfree/get\" + skill, { responseType: 'text' as 'json', headers });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}